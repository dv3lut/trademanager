<Window x:Class="TradeManager.ConfigActifsWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TradeManager"
        mc:Ignorable="d"
        Title="Configurations liste actifs" Height="500" Width="400"
        WindowStyle="SingleBorderWindow"
        ResizeMode="NoResize"
        Icon="/Images/logo_white.png"
        Focusable="True"
        Background="#222222">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <TextBox x:Name="TextBoxHidden" Background="Transparent" Foreground="#AAAAAA" Height="1" Width="1" FontSize="11" BorderThickness="0"/>


        <DataGrid x:Name="gridFavoris" RowHeight="22" BorderBrush="#333333"
            BorderThickness="1" RowBackground="#333333"
            GridLinesVisibility="Horizontal" Grid.Row="1" Grid.Column="1" Grid.RowSpan="3" Margin="0" AutoGenerateColumns="false" 
            ItemsSource="{Binding sourceFav, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Extended" SelectionUnit="FullRow"
            FontFamily="DejaVu Sans" Foreground="#AAAAAA" FontSize="13" ColumnWidth="*" HeadersVisibility="Column" Grid.ColumnSpan="3" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#333333"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="YellowGreen"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#333333"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="YellowGreen"/>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="BorderBrush" Value="#333333"/>
                    <Setter Property="BorderThickness" Value="2" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="YellowGreen"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#333333" />
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="FontSize" Value="17"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Setter Property="BorderBrush" Value="#333333"/>
                </Style>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseEnter" Handler="MouseEnterHandler"></EventSetter>
                    <EventSetter Event="PreviewMouseDown" Handler="PreviewMouseDownHandler"></EventSetter>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Background>
                <SolidColorBrush Opacity="0.0"/>
            </DataGrid.Background>
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Header="Favoris" Binding="{Binding Ticker, Mode=OneWay}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>




        <DataGrid x:Name="gridDisponibles" RowHeight="22" BorderBrush="#333333"
            BorderThickness="1" RowBackground="#333333"
            GridLinesVisibility="Horizontal" Grid.Row="1" Grid.Column="6" Grid.RowSpan="4" Margin="0" AutoGenerateColumns="false" 
            ItemsSource="{Binding sourceDispo, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Extended" SelectionUnit="FullRow"
            FontFamily="DejaVu Sans" Foreground="#AAAAAA" FontSize="13" ColumnWidth="*" HeadersVisibility="Column" Grid.ColumnSpan="3" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">

            <DataGrid.Resources>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="#333333"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="YellowGreen"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#333333"/>
                <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="YellowGreen"/>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="BorderBrush" Value="#333333"/>
                    <Setter Property="BorderThickness" Value="2" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="YellowGreen"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>

                <Style BasedOn="{StaticResource {x:Type DataGridColumnHeader}}" TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="#333333" />
                    <Setter Property="Foreground" Value="LightGray" />
                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Height" Value="40"/>
                    <Setter Property="FontSize" Value="12"/>
                    <Setter Property="BorderThickness" Value="3"/>
                    <Setter Property="BorderBrush" Value="#333333"/>
                </Style>
            </DataGrid.Resources>

            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseEnter" Handler="MouseEnterHandler"></EventSetter>
                    <EventSetter Event="PreviewMouseDown" Handler="PreviewMouseDownHandler"></EventSetter>
                </Style>
            </DataGrid.RowStyle>

            <DataGrid.Background>
                <SolidColorBrush Opacity="0.0"/>
            </DataGrid.Background>
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Header="Actifs disponibles" Binding="{Binding Ticker, Mode=OneWay}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="HorizontalAlignment" Value="Center" />
                            <Setter Property="VerticalAlignment" Value="Center"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

        <Image x:Name="ImgFavToDispo" Grid.ColumnSpan="2" Grid.Column="4" HorizontalAlignment="Center" Margin="0" Grid.Row="1" Grid.RowSpan="2" VerticalAlignment="Center" Height="50" Width="50" Source="/Images/arrow_right_yellowgreen.png" MouseEnter="ImgFavToDispo_MouseEnter" MouseLeave="ImgFavToDispo_MouseLeave" MouseUp="ImgFavToDispo_Click"></Image>
        <Image x:Name="ImgDispoToFav" Grid.ColumnSpan="2" Grid.Column="4" HorizontalAlignment="Center" Margin="0" Grid.Row="2" Grid.RowSpan="2" VerticalAlignment="Center" Height="50" Width="50" Source="/Images/arrow_left_yellowgreen.png" MouseEnter="ImgDispoToFav_MouseEnter" MouseLeave="ImgDispoToFav_MouseLeave" MouseUp="ImgDispoToFav_Click"></Image>
        <Image x:Name="ImgPoubelle" Grid.ColumnSpan="2" Grid.Column="2" HorizontalAlignment="Left" Margin="30,10,0,22" Grid.Row="4" VerticalAlignment="Center" Height="40" Width="50" Source="poubelle.png" MouseUp="ImgPoubelle_MouseUp"/>
        <TextBlock x:Name="TextAll" Grid.ColumnSpan="2" Grid.Column="1" Width="50" TextAlignment="Center" Margin="0,0,0,10" Grid.Row="4" TextWrapping="Wrap" Text="ALL" VerticalAlignment="Center" FontFamily="DejaVu Sans" Background="#00000000" Foreground="White" FontSize="17" MouseUp="TextAll_MouseUp"/>

        <Button Grid.ColumnSpan="3" FontFamily="DejaVu Sans" FontSize="12" Content="Valider" Grid.Column="1" Foreground="White" HorizontalAlignment="Center" Grid.Row="5" VerticalAlignment="Bottom" Width="75" Height="50" Click="Button_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Setters>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="button" CornerRadius="3, 3, 3, 3" BorderBrush="white" BorderThickness="1" Background="Transparent">
                                        <TextBlock  Text="{TemplateBinding Button.Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="button" Property="BorderBrush" Value="yellowgreen" />
                                            <Setter TargetName="button" Property="Background"  Value="Transparent"/>
                                            <Setter TargetName="button" Property="BorderThickness"  Value="3"/>
                                            <Setter Property="Foreground" Value="White" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="button"  Property="Background" Value="black"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style.Setters>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Window>
